.htaccess
frontend/
	.htaccess
	vendor/
	vendor_user/
	App/
		configs/
		languages/
		logs/
		Models/					
			User.php			von Controller > Models\User.php
		public/
			index.php
			images/
			javascript/
			css/
		temp/
		templates/
		home.php				\App\PageController
cms/
	...

✓ Entweder man verwendet die htaccess files oder setzt den Document-Root direkt auf den Public-Ordner
✓ Man kann von allen drei htaccess-Ebenen einsteigen
✓ Autoloading in vendor_user läuft mit allen Namespaces (in vendor nur mit Composer-Namespaces)
✓ Kein Punkt mehr in Morrow nodes erlaubt, um sauber 404-Fehler beim Resourcen zu handlen (nur noch [a-z0-9-])
✓ Nodes werden in lowercase umgewandelt. Parameter über Routing Rules kommen aber richtig an.
✓ Kein Controller-Ordner mehr, um die Verschachtelung klein zu halten
✓ RewriteBase kann durch die neue Umschreibung eingecheckt werden (somit müsste lokale htaccess entfallen)
✓ Projekt auf Namespace "App" umbauen.
✓ kein :file oder :url mehr für Resourcen, weil alles aus Sicht des public-Ordners ist
✓ session save path in der config setzen und auf den temp-Ordner umstellen
✓ Morrow zu FrontController umbenannt


✓ Projekte werden komplett getrennt behandelt
  - Man kann verschiedene Versionen des Frameworks laufen lassen (z.B. CMS zusammen mit neuerem Morrow)
  - Fremdprojekte können einfach integriert werden
  - Morrow-Code muss nicht mehrere Projekte handlen können 
  - Es gibt nur noch einen config-Ordner
  

ToDo:
- view->setContent();
  so einstellen, dass man auch Schlüssel, Wert hat
  Dann muss man halt bei allen anderen view-Handlern content angeben

- on_session_gc() ist noch nicht gebaut


- streamwrapper auf reines PDO umstellen
  braucht gar kein PDO, wenn der streamwrapper auch die dir-Funktionen handlet
