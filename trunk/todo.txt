.htaccess
main/						Projekt Nr.1
	.htaccess
	vendor/
	vendor_user/
	App/
		configs/
		languages/
		models/					
			User.php			von Controller > Models\User.php
		public/
			.htaccess
			index.php
			images/
			javascript/
			css/
		storage/
		templates/
		home.php				\App\PageController
docs/							Projekt Nr.2
	...

✓ Projekte werden komplett getrennt behandelt
  - Man kann verschiedene Versionen des Frameworks laufen lassen (z.B. CMS zusammen mit neuerem Morrow)
  - Fremdprojekte können einfach integriert werden
  - Morrow-Code muss nicht mehrere Projekte handlen können 
  - Es gibt nur noch einen config-Ordner
✓ Entweder man verwendet die htaccess files oder setzt den Document-Root direkt auf den Public-Ordner
✓ Man kann von allen drei htaccess-Ebenen einsteigen
✓ Autoloading in vendor_user läuft mit allen Namespaces (in vendor nur mit Composer-Namespaces)
✓ Kein Punkt mehr in Morrow nodes erlaubt, um sauber 404-Fehler bei Ressourcen zu handlen (nur noch [a-z0-9-])
✓ Nodes werden in lowercase umgewandelt. Parameter über Routing Rules kommen aber richtig an.
✓ Kein Controller-Ordner mehr, um die Verschachtelung klein zu halten
✓ RewriteBase wird durch RewriteConditions ersetzt
✓ Projekt auf Namespace "App" umbauen.
✓ kein :file oder :url mehr für Resourcen, weil alles aus Sicht des public-Ordners ist
✓ session save path in der config setzen und auf den temp-Ordner umstellen
✓ Morrow zu FrontController umbenannt
✓ view->setContent(key, value) statt view->setContent(value, key)
✓ DB-Klasse: lastinsertid() kann man auch selbst aufrufen (ist also raus)
✓ DB-Klasse: affectedRows bei update ist jetzt letzter Parameter
✓ url->slug();
✓ Url routing auf echte regex umbauen
✓ Serpent über Composer hinzufügen
✓ JSONP-View-Handler hinzufügen
✓ CLI-fähig machen
✓ MessageQueue-Klasse bauen
✓ MessageQueue-Klasse wird jetzt automatisch initialisiert
✓ DB-Klasse wird jetzt automatisch initialisiert
✓ Default-Wert bei Input->get()
✓ Default-Wert bei Session->get()
✓ neue _default_app.php
✓ Fehler werden bei Toplevel-Domain ausgegeben, ansonsten nicht
✓ temp = storage und logs in storage
✓ TableDataGateway Klasse für bessere Models
  

ToDo:

- Serpent view handler fehlt noch. Dort müssen auch alle Morrow Mappings erklärt werden.
- File-Stream-Wrapper zuende bauen
- Neue Session-Funktionen und Stream Wrapper dokumentieren
- de-de statt de in language class umsetzen
- Form-Handler überarbeiten
- Validator bauen (dokumentieren)