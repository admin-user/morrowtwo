~:extend('_index')~

~[body]~
	<h1>
		<small>~~:escape($class.namespace)~\</small> ~~:escape($class.name)~
		~if ($class.parent !== null):~
			<small>(extends ~~:escape($class.parent)~)</small>
		~endif~
	</h1>

	<p class="lead">
		~~:escape($class.doc.content.0)~
	</p>
		
	~~:markdown(:raw($class.doc.content.1))~
		
	/* Only show members if there are public ones */
	<?
	$show_members = false;
	foreach ($class.members as $member) {
		if (:raw($member['visibility']) == 'public' || :raw($show_protected_and_private)) $show_members = true;
	}
	?>

	~if ($show_members):~
		<h2>Members</h2>

		<table class="table table-striped table-condensed">
		<colgroup>
			<col width="1">
			<col width="1">
			<col width="1">
			<col width="*">
		</colgroup>
		<tbody>

			~foreach ($class.members as $member):~
				~if (:raw($member.visibility) !== 'public' && !:raw($show_protected_and_private)) continue;~
				<tr>
					<td>~:render('elements/visibility', null, null, array('visibility' => $member.visibility))~</td>
					<td><span class="type">~~:escape($member.tags.var.0.type)~</span></td>
					<td><code>~~:escape($member.name)~</code></td>
					<td>~~:escape($member.content.title)~</td>
				</tr>
			~endforeach~
		</tbody>
		</table>
	~endif~

	/* Only show functions if there are public ones */
	<?
	$public_methods_available = false;
	foreach ($class.methods as $method) {
		if (:raw($method['visibility']) == 'public' || :raw($show_protected_and_private)) $show_methods = true;
	}
	?>

	~if ($show_methods):~
		<h2>Functions</h2>

		~foreach ($class.methods as $method):~
			~if (:raw($method.visibility) !== 'public' && !:raw($show_protected_and_private)) continue;~
			<div class="function-wrapper">
				<h4>
					~:render('elements/visibility', null, null, array('visibility' => $method.visibility))~
					
					~~:escape($method.name)~(
					
					<code>
						~foreach ($method.parameters as $p):~
							<?php
							:render('elements/type', null, null, array('type' => $p.type)) . ' ';

							echo '$'.:escape($p.name);

							if ($p.optional) {
								:render('elements/optional', null, null, array('default' => $p.default));
							}

							if ($p !== end($method.parameters)) {
								echo ','; 
							}
							?>
						~endforeach~
					</code>)
				</h4>
				
				~~:markdown(:raw($method.content.title))~

				<div class="well">
					~if (isset($method.content.description)):~
						~~:markdown(:raw($method.content.description))~
					~endif~

					~if (count($method.parameters) !== 0):~
						<h5>Parameters</h5>
					
						<table class="table table-condensed">
						<colgroup>
							<col width="1">
							<col width="1">
							<col width="*">
						</colgroup>
						<tbody>
							~foreach ($method.parameters as $p):~
								<tr>
									<td>~:render('elements/type', null, null, array('type' => $p.type))~</td>
									<td><code>$~~:escape($p.name)~</code></td>
									<td>~~:markdown(:raw($p.description))~</td>
								</tr>
							~endforeach~
						</tbody>
						</table>
					~endif~


					~if (isset($method.tags.return)):~
						<h5>Returns</h5>

						<table class="table table-condensed">
						<colgroup>
							<col width="1">
							<col width="*">
						</colgroup>
						<tbody>
							<tr>
								<td>~:render('elements/type', null, null, array('type' => $method.tags.return.0.type))~</td>
								<td>
									~if (isset($method.tags.return.0.description)):~
										~~:markdown(:raw($method.tags.return.0.description))~
									~endif~
								</td>
							</tr>
						</tbody>
						</table>
					~endif~
				</div>
			</div>
		~endforeach~
	~endif~

~[/body]~

